{"version":3,"sources":["components/layout/template/Template.js","components/layout/template/index.js","components/shared/icon/Icon.js","components/shared/icon/index.js","components/blocks/activity/index.js","components/blocks/activity/Activity.js","helpers/index.js","components/shared/image/Image.js","components/shared/image/index.js","components/blocks/graphsCollection/index.js","components/blocks/graphsCollection/GraphsCollection.js","components/sections/ordersInGraphs/index.js","components/sections/ordersInGraphs/OrdersInGraphs.js","hooks/useToggle.js","components/shared/partialContent/index.js","components/shared/partialContent/PartialContent.js","components/blocks/messages/Messages.js","components/blocks/messages/index.js","components/blocks/projects/Projects.js","components/blocks/projects/index.js","components/blocks/todo/Todo.js","components/blocks/todo/index.js","components/blocks/transactions/Transactions.js","components/blocks/transactions/index.js","pages/home/index.js","pages/home/Home.js","hooks/useFetch.js","App.js","serviceWorker.js","index.js"],"names":["Template","_ref","children","react_default","a","createElement","icons","down","faLevelDownAlt","up","faLevelUpAlt","bolt","faBolt","angleUp","faAngleUp","angleDown","faAngleDown","wrench","faWrench","times","faTimes","envelope","faEnvelope","clock","faClock","dollar","faDollarSign","Icon","icon","fontSize","props","Object","objectWithoutProperties","index_es","assign","style","defaultProps","Activity","variant","className","pointer","title","total","totalTitle","_ref$percent","percent","value","concat","shared_icon","resolvePath","filePath","prefix","arguments","length","undefined","process","startsWith","Image","src","alt","restProps","GraphsCollection","graphs","map","_ref2","_ref2$percent","key","width","OrdersInGraphs","_ref$ordersInGraphs","ordersInGraphs","switchGraphs","_ref$ordersInGraphs$g","graph","_useState","useState","_useState2","slicedToArray","currentGraph","setCurrentGraph","current","i","name","onClick","shared_image","graphsCollection","useToggle","init","toggle","setToggle","turnToggle","PartialContent","_useToggle","ToggleBtn","MessageItem","React","memo","_ref3","fullName","date","message","ago","Messages","messagesList","newMessages","draftMessages","Project","status","user","toLowerCase","Projects","projectsList","project","TodoItem","checked","handleTodoClick","text","type","onChange","Todo","todoList","done","todoCheckBox","setTodoCheckBox","todo","index","TransactionsItem","transaction","amount","Transactions","transactionsList","Home","data","activities","activity","blocks_activity","partialContent","messages","blocks_messages","projects","blocks_projects","blocks_todo","transactions","blocks_transactions","useFetch","url","setData","_useState3","_useState4","loading","setLoading","useEffect","fetch","then","j","json","App","_useFetch","template","pages_home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.836f485b.chunk.js","sourcesContent":["import React from 'react';\n\n// import './style/template.scss';\n\nfunction Template({ children }) {\n  return <main>{children}</main>;\n}\n\nexport default Template;\n","import Template from './Template';\n\nexport default Template;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faLevelDownAlt,\n  faLevelUpAlt,\n  faBolt,\n  faAngleUp,\n  faAngleDown,\n  faWrench,\n  faTimes,\n  faDollarSign\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { faEnvelope, faClock } from '@fortawesome/free-regular-svg-icons';\nconst icons = {\n  down: faLevelDownAlt,\n  up: faLevelUpAlt,\n  bolt: faBolt,\n  angleUp: faAngleUp,\n  angleDown: faAngleDown,\n  wrench: faWrench,\n  times: faTimes,\n  envelope: faEnvelope,\n  clock: faClock,\n  dollar: faDollarSign\n};\n\nconst Icon = ({ icon, fontSize, ...props }) => {\n  return (\n    <FontAwesomeIcon\n      {...props}\n      style={fontSize ? { fontSize } : {}}\n      icon={icons[icon]}\n    />\n  );\n};\n\nIcon.defaultProps = {\n  icon: ''\n};\n\nIcon.propTypes = {\n  icon: PropTypes.string\n};\n\nexport default Icon;\n","import Icon from './Icon';\n\nexport default Icon;\n","import Activity from './Activity';\n\nexport default Activity;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../../shared/icon';\nimport './style/activity.scss';\n\nconst Activity = ({\n  variant,\n  className,\n  pointer,\n  title,\n  total,\n  totalTitle,\n  percent: { value, icon }\n}) => {\n  return (\n    <div className={`activity  abroad ${className}`}>\n      <div className=\"activity__header space-between wrap-head\">\n        <h3 className=\"title\">{title}</h3>\n        <span className={`activity__pointer activity__pointer--${variant}`}>\n          {' '}\n          {pointer}\n        </span>\n      </div>\n      <div className=\"wrap-content\">\n        <h3 className=\"activity__total\">{total}</h3>\n        <div className=\"space-between\">\n          <span>{totalTitle}</span>\n          <span className={`activity__percent activity__percent--${variant}`}>\n            {value}% <Icon icon={icon} fontSize=\"10px\" />\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nActivity.propTypes = {\n  variant: PropTypes.string,\n  className: PropTypes.string,\n  pointer: PropTypes.string,\n  title: PropTypes.string,\n  total: PropTypes.string,\n  totalTitle: PropTypes.string,\n  percent: PropTypes.shape({\n    value: PropTypes.number,\n    icon: PropTypes.string\n  }).isRequired\n};\n\nexport default Activity;\n","export const resolvePath = (\n  filePath,\n  prefix = process.env.PUBLIC_URL.concat(\"/\")\n) => (filePath.startsWith(\"http\") ? filePath : prefix.concat(filePath));\n\nexport const capitalizeFirst = str =>\nstr.charAt(0).toUpperCase() + str.slice(1).toLowerCase();","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { resolvePath } from '../../../helpers';\n\nconst Image = ({ src, alt, ...restProps }) => (\n  <img src={resolvePath(src)} alt={alt} {...restProps} />\n);\n\nImage.defaultProps = {\n  alt: '',\n};\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  alt: PropTypes.string,\n};\n\nexport default Image;","import Image from './Image';\n\nexport default Image;","import GraphsCollection from './GraphsCollection';\n\nexport default GraphsCollection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../../shared/icon';\nimport './style/graphs-collection.scss';\n\nconst GraphsCollection = ({ graphs }) => {\n  const renderCollection = ({\n    total,\n    totalTitle,\n    percent: { value, icon }\n  }) => {\n    return (\n      <div key={totalTitle}>\n        <h3 className=\"graphs-collection__total\">{total}</h3>\n        <div className=\"space-between\">\n          <span>{totalTitle}</span>\n          <span>\n            {value}%{' '}\n            <Icon\n              className=\"graphs-collection__icon\"\n              icon={icon}\n              fontSize=\"10px\"\n            />\n          </span>\n        </div>\n        <div className=\"graphs-collection__progress\">\n          <div\n            className=\"graphs-collection__progress-bar\"\n            style={{ width: value + '%' }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n  return (\n    <div className=\"graphs-collection\">{graphs.map(renderCollection)}</div>\n  );\n};\n\nGraphsCollection.propTypes = {\n  graphs: PropTypes.arrayOf(\n    PropTypes.shape({\n      total: PropTypes.string,\n      totalTitle: PropTypes.string,\n      percent: PropTypes.shape({\n        value: PropTypes.number,\n        icon: PropTypes.string\n      })\n    })\n  )\n};\n\nexport default GraphsCollection;\n","import OrdersInGraphs from './OrdersInGraphs';\n\nexport default OrdersInGraphs;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Image from '../../shared/image';\nimport GraphsCollection from '../../blocks/graphsCollection';\n\nimport './style/orders-in-graphs.scss';\n\nconst OrdersInGraphs = ({\n  ordersInGraphs: {\n    title,\n    switchGraphs,\n    graph: { src, alt }\n  }\n}) => {\n  const [currentGraph, setCurrentGraph] = useState(0);\n\n  const renderButtons = ({ name }, i) => {\n    return (\n      <button\n        key={name}\n        onClick={() => setCurrentGraph(i)}\n        className={`orders-in-graphs__btn ${currentGraph === i &&\n          'orders-in-graphs__btn--active'} `}\n      >\n        {' '}\n        {name}\n      </button>\n    );\n  };\n\n  const current = switchGraphs[currentGraph];\n\n  return (\n    <div className=\"orders-in-graphs abroad\">\n      <div className=\"space-between wrap-head\">\n        <h3 className=\"title\">{title}</h3>\n        <div>{switchGraphs.map(renderButtons)}</div>\n      </div>\n      <div className=\"orders-in-graphs__graph-container wrap-content\">\n        <Image {...{ alt, src, className: 'orders-in-graphs__img' }} />\n        <div className=\"orders-in-graphs__collection\">\n          <GraphsCollection key={current.name} graphs={current.graphs} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nOrdersInGraphs.propTypes = {\n  ordersInGraphs: PropTypes.shape({\n    title: PropTypes.string,\n    switchGraphs: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string, graphs: PropTypes.array })\n    ),\n    graph: PropTypes.shape({ src: PropTypes.string, alt: PropTypes.string })\n      .isRequired\n  }).isRequired\n};\n\nexport default OrdersInGraphs;\n","import { useState } from 'react';\n\nconst useToggle = (init = false) => {\n  const [toggle, setToggle] = useState(init);\n\n  const turnToggle = () => setToggle(!toggle);\n\n  return {\n    toggle,\n    turnToggle\n  };\n};\n\nexport default useToggle;\n","import PartialContent from './PartialContent';\n\nexport default PartialContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../icon';\nimport useToggle from '../../../hooks/useToggle';\nimport './style/partial-content.scss';\n\nconst PartialContent = ({ children, title, className }) => {\n  const { toggle, turnToggle } = useToggle();\n  const ToggleBtn = ({ children }) => (\n    <button className=\"partial-content__btn\" onClick={turnToggle}>\n      {children}\n    </button>\n  );\n\n  return (\n    <div className={`abroad partial-content ${className ? className : ''}`}>\n      <div className=\"space-between wrap-head\">\n        <h3 className=\"title\">{title}</h3>{' '}\n        <div>\n          <ToggleBtn>\n            <Icon icon={toggle ? 'angleUp' : 'angleDown'} />\n          </ToggleBtn>\n          <button className=\"partial-content__btn\">\n            <Icon icon=\"wrench\" />\n          </button>\n          <button className=\"partial-content__btn\">\n            <Icon icon=\"times\" />\n          </button>\n        </div>\n      </div>\n      <div>\n        {toggle ? (\n          children\n        ) : (\n          <div className=\"wrap-content\">\n            <ToggleBtn>\n              <span className=\"partial-content__dots\">...</span>\n            </ToggleBtn>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nPartialContent.propTypes = {\n  title: PropTypes.string\n};\n\nexport default PartialContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../../shared/icon';\nimport './style/messages.scss';\n\nconst Messages = ({ messagesList, newMessages, draftMessages }) => {\n  const renderMessages = ({ fullName, date, message, ago }, i) => {\n    return <MessageItem key={i} {...{ fullName, date, message, ago }} />;\n  };\n\n  return (\n    <div className=\"messages\">\n      <div className=\"messages__new wrap-content\">\n        <h2 className=\"messages__title title\">\n          <Icon icon=\"envelope\" /> New Messages\n        </h2>\n        You have {newMessages ? `${newMessages}` : 0} new messages and{' '}\n        {draftMessages ? `${draftMessages}` : 0} waiting in draft folder.\n      </div>\n      <div className=\"wrap-content\">{messagesList.map(renderMessages)}</div>\n    </div>\n  );\n};\n\nconst MessageItem = React.memo(({ fullName, date, message, ago }) => (\n  <div className=\"messages__item\">\n    <div className=\"space-between\">\n      <span className=\"title\">{fullName}</span>{' '}\n      {ago && <span className={ago <= 4 ? 'highlight' : ''}>{ago}m ago</span>}\n    </div>\n    <div>{message}</div>\n    <div>{date}</div>\n  </div>\n));\n\nMessages.propTypes = {\n  messagesList: PropTypes.arrayOf(\n    PropTypes.shape({\n      fullName: PropTypes.string,\n      date: PropTypes.string,\n      message: PropTypes.string,\n      ago: PropTypes.number\n    })\n  ),\n  newMessages: PropTypes.number,\n  draftMessages: PropTypes.number\n};\n\nexport default Messages;\n","import Messages from './Messages';\n\nexport default Messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../../shared/icon';\nimport './style/projects.scss';\n\nconst Projects = ({ projectsList }) => {\n  const renderProjects = (project, i) => <Project key={i} {...project} />;\n\n  return (\n    <div className=\" wrap-content\">\n      <div className=\"projects__item\">\n        <div className=\"projects__cell projects__cell--wider\">\n          <span className=\"title\"> Status</span>\n        </div>\n        <div className=\"projects__cell\">\n          <span className=\"title\"> Date</span>\n        </div>\n        <div className=\"projects__cell\">\n          <span className=\"title\"> User</span>\n        </div>\n        <div className=\"projects__cell projects__cell--narrow\">\n          <span className=\"title\"> Value</span>\n        </div>\n      </div>\n      {projectsList.map(renderProjects)}\n    </div>\n  );\n};\n\nconst Project = React.memo(({ status, date, user, value }) => {\n  return (\n    <div className=\"projects__item\">\n      <div className=\"projects__cell projects__cell--wider\">\n        <span\n          className={`projects__cell-status projects__cell-status--${status.toLowerCase()}`}\n        >\n          {status}\n        </span>\n      </div>\n      <div className=\"projects__cell\">\n        <Icon icon=\"clock\" /> {date}\n      </div>\n      <div className=\"projects__cell\">{user}</div>\n      <div className=\"projects__cell projects__cell--narrow projects__cell-value\">\n        {value}% <Icon icon=\"up\" />\n      </div>\n    </div>\n  );\n});\n\nProjects.propTypes = {\n  projectsList: PropTypes.arrayOf(\n    PropTypes.shape({\n      status: PropTypes.string,\n      date: PropTypes.string,\n      user: PropTypes.string,\n      value: PropTypes.number\n    })\n  )\n};\n\nexport default Projects;\n","import Projects from './Projects';\n\nexport default Projects;\n","import React, { useState, memo } from 'react';\nimport PropTypes from 'prop-types';\n\n// import Icon from '../../shared/icon';\nimport './style/todo.scss';\n\nconst Todo = ({ todoList }) => {\n  const [todoCheckBox, setTodoCheckBox] = useState(\n    todoList.map(({ done }) => done)\n  );\n\n  const handleTodoClick = i => {\n    setTodoCheckBox(\n      todoCheckBox.map((done, index) => (i === index ? !done : done))\n    );\n  };\n\n  const renderTodoItem = (todo, i) => (\n    <TodoItem\n      key={i}\n      {...todo}\n      checked={todoCheckBox[i]}\n      handleTodoClick={() => handleTodoClick(i)}\n    />\n  );\n\n  return <div className=\" wrap-content\">{todoList.map(renderTodoItem)}</div>;\n};\n\nconst TodoItem = memo(({ checked, handleTodoClick, text }) => {\n  return (\n    <div className=\"todo__item\">\n      <input type=\"checkbox\" onChange={handleTodoClick} checked={checked} />\n      <span className={`todo__text ${checked ? 'todo__text--done' : ''}`}>\n        {text}\n      </span>\n    </div>\n  );\n});\n\nTodo.propTypes = {\n  todoList: PropTypes.arrayOf(\n    PropTypes.shape({\n      checked: PropTypes.bool,\n      text: PropTypes.string,\n      when: PropTypes.string\n    })\n  )\n};\n\nexport default Todo;\n","import Todo from './Todo';\n\nexport default Todo;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../../shared/icon';\nimport Image from '../../shared/image';\nimport './style/transactions.scss';\n\nconst Transactions = ({ transactionsList, map }) => {\n  const renderTransactionsItem = (props, i) => (\n    <TransactionsItem key={i} {...props} i={i} />\n  );\n\n  return (\n    <div className=\"wrap-content transactions__container\">\n      <div className=\"transactions__inner \">\n        <div className=\"transactions__item\">\n          <div className=\"transactions__cell-num title\">№</div>\n          <div className=\"transactions__cell-transaction title\">\n            Transactions\n          </div>\n          <div className=\"transactions__cell-date title\">Date</div>\n          <div className=\"transactions__cell-amount title\">Amount</div>\n        </div>\n        {transactionsList.map(renderTransactionsItem)}\n      </div>\n      <div className=\"transactions__inner \">\n        <Image src={map} />\n      </div>\n    </div>\n  );\n};\n\nconst TransactionsItem = memo(({ transaction, date, amount, i }) => {\n  return (\n    <div className=\"transactions__item\">\n      <div className=\"transactions__cell-num\">{i + 1}</div>\n      <div className=\"transactions__cell-transaction\">{transaction}</div>\n      <div className=\"transactions__cell-date\">{date}</div>\n      <div className=\"transactions__cell-amount\">\n        <span className=\"transactions__amount\">\n          <Icon icon=\"dollar\" /> {amount}\n        </span>\n      </div>\n    </div>\n  );\n});\n\nTransactions.propTypes = {\n  transactionsList: PropTypes.arrayOf(\n    PropTypes.shape({\n      date: PropTypes.string,\n      amount: PropTypes.string\n    })\n  ),\n\n  map: PropTypes.string\n};\n\nexport default Transactions;\n","import Transactions from './Transactions';\n\nexport default Transactions;\n","import Home from './Home';\n\nexport default Home","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Activities from '../../components/blocks/activity';\nimport OrdersInGraphs from '../../components/sections/ordersInGraphs';\nimport PartialContent from '../../components/shared/partialContent';\nimport Messages from '../../components/blocks/messages';\nimport Projects from '../../components/blocks/projects';\nimport Todo from '../../components/blocks/todo';\nimport Transactions from '../../components/blocks/transactions';\n\nimport './style/home.scss';\n\nconst Home = ({ data }) => {\n  const renderActivities = activity => (\n    <Activities key={activity.title} {...activity} />\n  );\n\n  return (\n    <div className=\"home container\">\n      {data.activities.map(renderActivities)}\n      <OrdersInGraphs ordersInGraphs={data.ordersInGraphs} />\n      <div className=\"home__content-collection\">\n        <div className=\"home__messages-container\">\n          <PartialContent title={data.messages.title}>\n            <Messages {...data.messages} />\n          </PartialContent>\n        </div>\n        <div className=\"home__lists-container\">\n          {data.projects && (\n            <PartialContent title={data.projects.title} className=\"projects\">\n              <Projects {...data.projects} />\n            </PartialContent>\n          )}\n          {data.todo && (\n            <PartialContent title={data.todo.title} className=\"todo\">\n              <Todo {...data.todo} />\n            </PartialContent>\n          )}\n          {data.transactions && (\n            <PartialContent\n              title={data.transactions.title}\n              className=\"transactions\"\n            >\n              <Transactions {...data.transactions} />\n            </PartialContent>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHome.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default Home;\n","import { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(url)\n      .then(j => j.json())\n      .then(data => {\n        setData(data);\n        setLoading(false);\n      });\n  }, [url]);\n\n  return { data, loading };\n};\n\nexport default useFetch;\n","import React from 'react';\n\nimport Template from './components/layout/template';\nimport Home from './pages/home';\n\nimport useFetch from './hooks/useFetch';\nimport { resolvePath } from './helpers/index';\n\nconst App = () => {\n  const { data, loading } = useFetch(resolvePath('data.json'));\n\n  return (\n    <div className=\"App\">\n      <Template>{!loading && <Home data={data} />}</Template>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}